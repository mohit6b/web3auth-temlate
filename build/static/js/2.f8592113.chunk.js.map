{"version":3,"file":"static/js/2.f8592113.chunk.js","mappings":"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GAAYqK,EAAO5B,WAAWzhB,KAAKkS,GAAUwP,KAW3EliB,EAAAA,KAAO,SAAS4O,EAAmBI,GAE9C,OAAO9E,EAAO1J,KAAKud,EAAUiG,KAAK/B,WAAWzhB,KAAKoO,GAAYqT,WAAWzhB,KAAKwO,GAAa,MAGhFhP,EAAAA,WAAa,SACxB4O,EACAI,EACAkT,GAKA,GAAyB,KAArBtT,EAAUxJ,QAAsC,KAArBwJ,EAAUxJ,OACvC,MAAM,IAAI+c,WAAW,gCAIvB,GAA0B,KAAtBnT,EAAW5J,OACb,MAAM,IAAI+c,WAAW,iCAGvB,OAAOjY,EAAO1J,KACZuhB,EAAYkC,WAAWhC,WAAWzhB,KAAKoO,GAAYqT,WAAWzhB,KAAKwO,GAAakT,gHClZpF,IAAMgC,EAAmCha,EAAO1J,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI2jB,EAAqCja,EAAO1J,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFR,EAAAA,iBAA2B,SACzBgP,EACAJ,EACAsT,QAAA,QAAAA,GAAAA,GAEA,IAAMlH,EAAS9Q,EAAO1J,KACpB0hB,EAAagC,EAAmCC,GAIlD,OAFAnV,EAAWzD,KAAKyP,EAAQkH,EAAa,EAAI,GACzCtT,EAAUrD,KAAKyP,EAAQkH,EAAa,IAAM,KACnClH,GAGThb,EAAAA,iBAA2B,SAASgP,GAClC,IAAM5J,EAAS4J,EAAW5J,OAGtBgE,EAAQ,EACZ,GAAIhE,EAASgE,EAAQ,GAA2B,KAAtB4F,EAAW5F,GAAiB,OAAO,KAI7D,GAAIhE,GAHJgE,GAAS,GAGY,KAA2B,IAApB4F,EAAW5F,IAAgB,OAAO,KAE9D,IAAMgb,EAA2B,IAApBpV,EAAW5F,GAExB,GAAIgb,EAAO,GAAKA,EAAO,EAAG,OAAO,KACjC,GAAIhf,GAFJgE,GAAS,GAEYgb,EAAM,OAAO,KAGlC,IAAMC,EAAMrV,EAAW5F,EAAQgb,EAAO,IAAMA,EAAO,EAAIpV,EAAW5F,EAAQgb,EAAO,IAAM,EAAI,GAE3F,OAAIhf,GADJgE,GAASgb,GACYC,GAInBjf,EAASgE,EAAQ,GACK,IAAtB4F,EAAW5F,IACe,IAA1B4F,EA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ACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI2jB,EAAqCja,EAAO1J,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA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","sources":["../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/chain/IChainInterface.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/chain/config.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/errors/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/wallet/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/adapter/IAdapter.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/loglevel.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@web3auth/base/src/utils.ts","../node_modules/bignumber.js/bignumber.mjs","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/ethereumjs-abi/index.js","../node_modules/ethereumjs-abi/lib/index.js","../node_modules/ethjs-util/lib/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/querystring/decode.js","../node_modules/querystring/encode.js","../node_modules/querystring/index.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js","../node_modules/url/node_modules/punycode/punycode.js","../node_modules/url/url.js","../node_modules/url/util.js"],"sourcesContent":["var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  5133: require('./5133.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['grayGlacier', require('./grayGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n",null,null,null,null,null,null,null,null,null,null,"export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = typeof CHAIN_NAMESPACES[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = typeof ADAPTER_NAMESPACES[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n};\n","import { CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"./IChainInterface\";\nconst getDefaultNetworkId = (chainNamespace: ChainNamespaceType): number => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\n\nexport const getEvmChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: `https://rpc.ankr.com/eth_ropsten`,\n      displayName: \"Ropsten Testnet\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: `https://rpc.ankr.com/eth_rinkeby`,\n      displayName: \"Rinkeby Testnet\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n    };\n  }\n\n  return null;\n};\n\nexport const getSolanaChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  }\n\n  return null;\n};\n\nexport const getChainConfig = (chainNamespace: ChainNamespaceType, chainId?: number | string): CustomChainConfig | null => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? (typeof chainId === \"number\" ? chainId : parseInt(chainId, 16)) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLLET: \"sollet\",\n  SOLLET_EXTENSION: \"sollet-extension\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = typeof WALLET_ADAPTERS[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = typeof SOLANA_ADAPTERS[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = typeof EVM_ADAPTERS[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = typeof MULTI_CHAIN_ADAPTERS[keyof typeof MULTI_CHAIN_ADAPTERS];\n","import type { OpenloginUserInfo } from \"@toruslabs/openlogin\";\nimport { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = typeof ADAPTER_CATEGORY[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = typeof ADAPTER_STATUS[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  status: ADAPTER_STATUS_TYPE;\n  provider: SafeEventEmitterProvider | null;\n  adapterData?: unknown;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setChainConfig(customChainConfig: CustomChainConfig): void;\n  setAdapterSettings(adapterSettings: unknown): void;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  // should be added in constructor or from setChainConfig function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  public abstract clientId: string;\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  public abstract get provider(): SafeEventEmitterProvider | null;\n\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n    const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n    this.chainConfig = { ...defaultChainConfig, ...customChainConfig };\n  }\n\n  setAdapterSettings(_: unknown): void {}\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n    if (!this.clientId) throw WalletLoginError.connectionError(\"Please initialize Web3Auth with a valid clientId in constructor\");\n  }\n\n  checkInitializationRequirements(): void {\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport interface WalletConnectV1Data {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n}\n\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","export function storageAvailable(type: \"sessionStorage\" | \"localStorage\"): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = (window as any)[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const _error = error as DOMException;\n    return !!(\n      _error &&\n      // everything except Firefox\n      (_error.code === 22 ||\n        // Firefox\n        _error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        _error.name === \"QuotaExceededError\" ||\n        // Firefox\n        _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const isHexStrict = (hex: string): boolean => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n","/*\r\n *      bignumber.js v9.1.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, BN, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","module.exports = require('./lib/index.js')\n","/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n"],"names":["arrayLikeToArray","module","exports","arr","Array","isArray","__esModule","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1_1","chain","name_1","name","chainId","toString","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_b","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","_c","Istanbul","hardforks","_e","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","_a","standardChainParams","_getChainParams","__assign","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","map","e","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1_1","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","concat","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","hfs_1_1","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2_1","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1_1","valueEIP","v","eipParams","activeHfs","activeHardforks","HARDFORK_CHANGES_3_1","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2_1","_d","hfs_2_1","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","HARDFORK_CHANGES_4_1","HARDFORK_CHANGES_5_1","HARDFORK_CHANGES_6_1","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","nonce","gasLimit","to","r","s","type","_type","toBuffer","toNumber","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","unpadBuffer","publicToAddress","privateKey","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","isSupportedChainId","forCustomChain","values","bits","cannotEqual","entries","key","bufferToHex","postfix","TRANSACTION_TYPE_BUFFER","accessList","maxFeePerGas","maxPriorityFeePerGas","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","checkMaxInitCodeSize","freeze","FeeMarketEIP1559Transaction","serialized","slice","equals","decode","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","call","getDataFeeEIP2930","isFrozen","baseFee","gasPrice","min","sub","add","bnToUnpaddedBuffer","base","raw","encode","hashMessage","message","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","enumerable","get","default","__exportStar","_validateTxV","chainIdDoubled","muln","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","isBuffer","fromSerializedData","transactionID","_common","isAccessListBuffer","input","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","utils_1","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","signature","messageHash","sig","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","toLowerCase","assert","ethjsUtil","secp256k1","addr","bytes_1","eip1191ChainId","stripHexPrefix","prefix","hash_1","ret","parseInt","toUpperCase","nonceBN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","right","first","isHexString","padToEven","toArrayLike","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","keccak224","keccak384","k256","keccak512","createHash","update","digest","padded","rlp","self","fields","_fields","toJSON","label","obj_1","getter","setter","allowZero","allowLess","defineProperty","configurable","set","alias","d","keys_1","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","n","point","g","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","CHAIN_NAMESPACES","getChainConfig","chainNamespace","finalChainId","getDefaultNetworkId","rpcTarget","displayName","blockExplorer","ticker","tickerName","getEvmChainConfig","getSolanaChainConfig","Web3AuthError","_inherits","code","_classCallCheck","_defineProperty","_assertThisInitialized","_createClass","CustomError","WalletInitializationError","_this2","extraMessage","messages","fromCode","WalletLoginError","_this3","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","SOLLET","SOLLET_EXTENSION","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","WALLET_ADAPTERS","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","ADAPTER_DATA_UPDATED","SafeEventEmitter","loglevel","isHexStrict","hex","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","j","charCodeAt","compare","b","xc","c","yc","k","l","intCheck","max","toExponential","charAt","toFixedPoint","zs","BigNumber","clone","configObject","div","convertBase","parseNumeric","P","constructor","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","replace","search","substring","round","DEBUG","format","rm","id","c0","ne","maxOrMin","args","method","m","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","obj","p","hasOwnProperty","crypto","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","callerIsToString","pow","multiply","temp","xlo","xhi","carry","klo","khi","aL","bL","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","toStringTag","for","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","_context","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","_lookupAccounts","res","_context2","_lookupDefaultAccount","_context3","_sendTransaction","_context4","txParams","params","_signTransaction","_context5","_ethSign","_context6","extraParams","msgParams","_signTypedData","_context7","_signTypedDataV","_context8","_signTypedDataV2","_context9","_personalSign","_context10","firstParam","secondParam","warning","_encryptionPublicKey","_context11","_decryptMessage","_context12","_fetchPrivateKey","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","next","end","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_getPrivateKey","_","_processTransaction","sendTransaction","_processSignTransaction","signTransaction","_processEthSignMessage","signMessage","_processPersonalMessage","signPersonalMessage","_processTypedMessage","signTypedData","WalletConnectProvider","state","chainConfig","skipLookupNetwork","_enable","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_switchChain","addChain","_ref2$addChain","lookup","currentChainConfig","sendCustomRequest","rpcUrls","log","configure","lookupNetwork","notReady","_get","connected","notConnectedError","provider","connectedHexChainId","rpcConnectionError","getProviderHandlers","ethMiddleware","engine","JRPCEngine","_createJsonRpcClient","providerFromEngine","updateProviderEngineProxy","on","_ref3","payload","_payload$params$","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_fetchEip1159GasEstimates","url","estimates","normalizedEstimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_typeof","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","_data$domain","signTx","_signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","unsignedEthTx","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","debug","_processTypedMessageV","_processTypedMessageV2","_processEncryptionPublicKey","info","getEncryptionPublicKey","stripped","buff","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","_init","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_this$chainConfig","clonedTxParams","gas","getDefaultGasLimit","defaultGasLimit","getDefaultGasFees","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","_fetchEthGasPriceEstimate","_getEIP1559Compatibility","latestBlock","supportsEIP1559","baseFeePerGas","_fetchGasFeeEstimateData","isLegacyGasAPICompatible","EIP1559APIEndpoint","gasData","gasFeeEstimates","gasEstimateType","LegacyGasAPIEndpoint","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","_yield$this$fetchGasF","_gasFeeEstimates$medi","_yield$this$fetchEthG","txMeta","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","warn","blockGasLimit","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","_yield$this$determine","analyzeGasUsage","_yield$this$analyzeGa","addGasBuffer","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","_lookupNetwork","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","symbol","switchChain","_addNewChain","chainParams","_updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref2","_updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","B","DO_NOT_EXPORT_CRC","utils","ABI","elementaryName","startsWith","parseTypeN","exec","parseTypeNxM","tmp","parseTypeArray","parseNumber","arg","parseSignature","retargs","encodeSingle","size","unshift","zeros","setLengthRight","bitLength","decodeSingle","offset","parseType","rawType","decoded","subArray","memoryUsage","isDynamic","eventID","methodID","rawEncode","headLength","cur","rawDecode","parsed","simpleEncode","simpleDecode","solidityHexValue","bitsize","subType","arraySize","arrayValues","bytesize","solidityPack","soliditySHA3","soliditySHA256","sha256","solidityRIPEMD160","ripemd160","fromSerpent","toSerpent","intToHex","arrayContainsArray","superset","subset","some","getBinarySize","fromAscii","stringValue","fromUtf8","toAscii","fromCharCode","toUtf8","getKeys","allowEmpty","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","ctx","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","minProperties","maxProperties","every","additionalItems","contains","number","exclusiveMinimum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","string","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","o","shift","decodeURIComponent","encodePath","decimalParts","val","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","fragment","document","integer","boolean","date","Date","any","qs","sep","maxKeys","kstr","vstr","idx","stringifyPrimitive","ks","root","f","util","validateBase64","unescape","escape","atob","btoa","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","vn","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","msCrypto","nodeType","freeGlobal","global","window","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","mapDomain","ucs2decode","extra","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","w","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","define","Url","protocol","slashes","auth","host","port","hostname","query","pathname","href","urlParse","source","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","rest","trim","simplePath","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","toASCII","ae","esc","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","isAbsolute"],"sourceRoot":""}