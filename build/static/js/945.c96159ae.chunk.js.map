{"version":3,"file":"static/js/945.c96159ae.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/chain/IChainInterface.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/chain/config.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/errors/index.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/wallet/index.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/adapter/IAdapter.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/loglevel.ts","../node_modules/@web3auth/solana-provider/node_modules/@web3auth/base/src/utils.ts","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/eventemitter3/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = typeof CHAIN_NAMESPACES[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = typeof ADAPTER_NAMESPACES[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n};\n","import { CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"./IChainInterface\";\nconst getDefaultNetworkId = (chainNamespace: ChainNamespaceType): number => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\n\nexport const getEvmChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: `https://rpc.ankr.com/eth_ropsten`,\n      displayName: \"Ropsten Testnet\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: `https://rpc.ankr.com/eth_rinkeby`,\n      displayName: \"Rinkeby Testnet\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n    };\n  }\n\n  return null;\n};\n\nexport const getSolanaChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n    };\n  }\n\n  return null;\n};\n\nexport const getChainConfig = (chainNamespace: ChainNamespaceType, chainId?: number | string): CustomChainConfig | null => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? (typeof chainId === \"number\" ? chainId : parseInt(chainId, 16)) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLLET: \"sollet\",\n  SOLLET_EXTENSION: \"sollet-extension\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = typeof WALLET_ADAPTERS[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = typeof SOLANA_ADAPTERS[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = typeof EVM_ADAPTERS[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = typeof MULTI_CHAIN_ADAPTERS[keyof typeof MULTI_CHAIN_ADAPTERS];\n","import type { OpenloginUserInfo } from \"@toruslabs/openlogin\";\nimport { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = typeof ADAPTER_CATEGORY[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = typeof ADAPTER_STATUS[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  status: ADAPTER_STATUS_TYPE;\n  provider: SafeEventEmitterProvider | null;\n  adapterData?: unknown;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setChainConfig(customChainConfig: CustomChainConfig): void;\n  setAdapterSettings(adapterSettings: unknown): void;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  // should be added in constructor or from setChainConfig function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  public abstract clientId: string;\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  public abstract get provider(): SafeEventEmitterProvider | null;\n\n  setChainConfig(customChainConfig: CustomChainConfig): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n    const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n    this.chainConfig = { ...defaultChainConfig, ...customChainConfig };\n  }\n\n  setAdapterSettings(_: unknown): void {}\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n    if (!this.clientId) throw WalletLoginError.connectionError(\"Please initialize Web3Auth with a valid clientId in constructor\");\n  }\n\n  checkInitializationRequirements(): void {\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<SafeEventEmitterProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport interface WalletConnectV1Data {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n}\n\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","export function storageAvailable(type: \"sessionStorage\" | \"localStorage\"): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = (window as any)[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const _error = error as DOMException;\n    return !!(\n      _error &&\n      // everything except Firefox\n      (_error.code === 22 ||\n        // Firefox\n        _error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        _error.name === \"QuotaExceededError\" ||\n        // Firefox\n        _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const isHexStrict = (hex: string): boolean => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","superPropBase","_get","Reflect","get","target","property","receiver","base","desc","getOwnPropertyDescriptor","call","arguments","length","apply","this","getPrototypeOf","object","prototype","hasOwnProperty","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","Layout","span","Number","isInteger","offset","RangeError","rv","create","constructor","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","number","isSafeInteger","lengths","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","u32","self","crypto","Uint32Array","createView","DataView","rotr","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","tmp","SHA2","padOffset","isLE","view","take","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","digestInto","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","window","affinePoint","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sha256","toFailures","run","StructError","failure","failures","rest","path","join","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","next","done","toFailure","context","struct","branch","refinement","options","coerce","ctx","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","hmac","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","confirmTransaction","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","CHAIN_NAMESPACES","getChainConfig","chainNamespace","chainId","finalChainId","getDefaultNetworkId","rpcTarget","displayName","blockExplorer","ticker","tickerName","getEvmChainConfig","getSolanaChainConfig","Web3AuthError","_inherits","_classCallCheck","_this","_defineProperty","_assertThisInitialized","_createClass","CustomError","WalletInitializationError","_this2","extraMessage","fromCode","WalletLoginError","_this3","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","SOLLET","SOLLET_EXTENSION","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","WALLET_ADAPTERS","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","ADAPTER_DATA_UPDATED","SafeEventEmitter","loglevel","isHexStrict","createChainIdMiddleware","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_super","chainConfig","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","rpcConnectionError","emit","_context4","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","invalidParams","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","symbol","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_yield$this$provider$","signedTransaction","signedTransactions","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","decorate","__importStar","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","listeners","handlers","ee","listenerCount","removeListener","removeAllListeners","prefixed","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_subscribe","_callee3","_x2","_unsubscribe","_callee4","_x3","_this4","addEventListener","_ref2","reason","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","ReferenceError","asyncGeneratorStep","_throw","Constructor","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","async","iter","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","runtime","regeneratorRuntime","accidentalStrictMode","Function","_createForOfIteratorHelper","allowArrayLike","it","_e","normalCompletion","didErr","step","_e2","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}